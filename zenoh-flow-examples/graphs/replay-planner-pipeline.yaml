flow: ReplayPlanner

operators:
  - id: ReplayPlannerStartOperator
    uri: file://./target/debug/examples/libreplay_planner_start_operator.so
    inputs:
      - id: input
        type: string
    outputs:
      - id: vehicle_state
        type: data
      - id: replay_trajectory_goal
        type: data

  - id: ReplayPlannerOperator
    uri: file://./target/debug/examples/libreplay_planner_operator.so
    inputs:
      - id: vehicle_state
        type: data
      - id: replay_trajectory_goal
        type: data
    outputs:
      - id: planned_trajectory
        type: data
      - id: replay_trajectory_feedback
        type: data
    configuration:
        heading_weight: 0.1
        min_record_distance: 0.5
        m_goal_distance_threshold_m: 0.75
        m_goal_angle_threshold_rad: 1.57

  - id: ReplayPlannerEndOperator
    uri: file://./target/debug/examples/libreplay_planner_end_operator.so
    inputs:
      - id: planned_trajectory
        type: data
      - id: replay_trajectory_feedback
        type: data
    outputs:
      - id: output
        type: string

sources:
  - id: ReplayPlannerSource
    uri: file://./target/debug/examples/libreplay_planner_source.so
    output:
      id: input
      type: string

sinks:
  - id: ReplayPlannerSink
    uri: file://./target/debug/examples/libreplay_planner_sink.so
    input:
      id: output
      type: string

links:
  - from: ReplayPlannerSource.input
    to: ReplayPlannerStartOperator.input

  - from: ReplayPlannerStartOperator.vehicle_state
    to: ReplayPlannerOperator.vehicle_state

  - from: ReplayPlannerStartOperator.replay_trajectory_goal
    to: ReplayPlannerOperator.replay_trajectory_goal

  - from: ReplayPlannerOperator.planned_trajectory
    to: ReplayPlannerEndOperator.planned_trajectory

  - from: ReplayPlannerOperator.replay_trajectory_feedback
    to: ReplayPlannerEndOperator.replay_trajectory_feedback

  - from: ReplayPlannerEndOperator.output
    to: ReplayPlannerSink.output